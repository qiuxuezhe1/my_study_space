三方库flask-script:一个管理flask对象的三方库。
from flask_script import Manager
# 使用Manager管理flask对象
manage = Manager(app)
# 命令行启动：python 文件名 runserver -h(host) -p(port) -d(debug)
manage.run()

三方库flask-blueprint，专门用于管理flask路由
# 第一步：生成蓝图对象
blue = Blueprint('first', __name__)
# 第二步：使用蓝图对象， @blue.route, first.函数名

session
设置session需要指定secrect_key,
flask存储session的两种方式
第一种：将session存储在cookie中(好处：服务器不在存储任何session数据)
第二种：将session数据存储在服务器
        1. 当第一次访问任何一个url连接时，都会在cookie中设置一个键值对，
           键为session，值为uuid类型的值
        2. 在服务器中会存储uuid的值，以string类型存储uuid和设置的键值对信息

在django中，使用request.session['ket'] = value时，cookie中的sessionid才会创建，同时django_session表中才会创建数据

反向解析
flask：url_for('解析函数', 解析路由的参数)

django: HttpResponseRedirect(reverse(‘应用名称’:路由回调函数名,kwargs={'id':12, 'name': '张飞'}))


三方库flask-session用来设置session。
通过flask_session中的类Session来创建session对象和初始化app
方法一：直接Session(app)进行初始化
方法二：先创建Session对象，再调用self.init_app()方法进行初始化，方法一的实质就是方法二的步骤。sess = Session()  sess.init_app(app)

在管理文件中注册蓝图
app.register_blueprint(blueprint=blue)

